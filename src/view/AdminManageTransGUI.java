/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;
import controller.RentalService;
import model.db_rentalKendaraan;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Asus
 */
public class AdminManageTransGUI extends javax.swing.JFrame {
    private RentalService rentalService;
    /**
     * Creates new form AdminCrudTransGUI
     */
    public AdminManageTransGUI(RentalService rentalService) {
        this.rentalService = rentalService;
        initComponents();
        loadTransactionList();
        setLocationRelativeTo(null);
    }

        private void loadTransactionList() {
        DefaultTableModel model = new DefaultTableModel();

        // Menambahkan kolom pada tabel sesuai dengan struktur tabel transaksi
        model.addColumn("ID");
        model.addColumn("Payment");
        model.addColumn("Fine");
        model.addColumn("Status");
        model.addColumn("Out Date");
        model.addColumn("Return Date");
        model.addColumn("User ID");
        model.addColumn("Car ID");

        try {
            // Membuka koneksi ke database
            Connection conn = db_rentalKendaraan.getConnection();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM transaksi");

            // Menambahkan data dari ResultSet ke model tabel
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("id"),
                    rs.getString("bayar"),
                    rs.getString("denda"),
                    rs.getString("status"),
                    rs.getString("tanggal_keluar"),
                    rs.getString("tanggal_kembali"),
                    rs.getInt("pengguna_id"),
                    rs.getInt("mobil_id")
                });
            }

            // Menetapkan model pada JTable
            TabelTrans.setModel(model);

            // Menutup koneksi
            conn.close();
        } catch (Exception e) {
            // Menampilkan pesan kesalahan jika gagal memuat data
            JOptionPane.showMessageDialog(this, "Failed to load transaction data!", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtBack = new javax.swing.JButton();
        BtDelete1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        TabelListMobil = new javax.swing.JScrollPane();
        TabelTrans = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BtBack.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        BtBack.setText("Back");
        BtBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtBackActionPerformed(evt);
            }
        });
        getContentPane().add(BtBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 420, 90, -1));

        BtDelete1.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        BtDelete1.setText("Delete");
        BtDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtDelete1ActionPerformed(evt);
            }
        });
        getContentPane().add(BtDelete1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 150, 90, -1));

        jLabel2.setFont(new java.awt.Font("Montserrat Black", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Transaction Data");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, -1, -1));

        TabelTrans.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TabelListMobil.setViewportView(TabelTrans);

        getContentPane().add(TabelListMobil, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 480, 230));

        jLabel4.setFont(new java.awt.Font("Montserrat Black", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("RentCarPro");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/AdminCrud.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtDelete1ActionPerformed
        // Mendapatkan baris yang dipilih
        int selectedRow = TabelTrans.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a transaction to delete.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Mendapatkan ID transaksi dari baris yang dipilih
        int transactionId = (int) TabelTrans.getValueAt(selectedRow, 0);

        // Konfirmasi penghapusan
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this transaction?", "Confirm", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            // Memanggil RentalService untuk menghapus transaksi
            boolean success = rentalService.deleteTransaction(transactionId);
            if (success) {
                JOptionPane.showMessageDialog(this, "Transaction deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

                // Memuat ulang data transaksi
                loadTransactionList();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to delete transaction.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_BtDelete1ActionPerformed

    private void BtBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtBackActionPerformed
        new AdminMenuGUI(rentalService).setVisible(rootPaneCheckingEnabled);
        this.dispose();
    }//GEN-LAST:event_BtBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RentalService rentalService = new RentalService();
                new AdminManageTransGUI(rentalService).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtBack;
    private javax.swing.JButton BtDelete1;
    private javax.swing.JScrollPane TabelListMobil;
    private javax.swing.JTable TabelTrans;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
